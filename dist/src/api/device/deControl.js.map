{"version":3,"sources":["src/api/device/deControl.js"],"names":[],"mappings":"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","file":"src/api/device/deControl.js","sourcesContent":["var mongoose     = require( 'mongoose' );\nvar DEVICE     = require('./deModel');\nvar MOMENT = require('../moment/moModel');\nvar AUTH     = require('../service/auth');\nvar uuid = require('node-uuid');\nvar PUBNUB = require('../service/pubnub');\nvar LOG = require('../service/util').logger;;\nvar CHALK =  require('chalk');\n\nexports.register = function( params, res, next )\n{\n    var device_id = uuid.v4();\n    var pubnub_auth_key = uuid.v4();\n    var channel_uuid = uuid.v4();\n\n    var new_device = new DEVICE(\n        {\n            device_id: device_id,\n            pubnub_key : pubnub_auth_key,\n            channel_uuid: channel_uuid\n        });\n    new_device.save();\n    PUBNUB.createServerConnection( channel_uuid, pubnub_auth_key,\n        ()=>{\n            var token = {\n                device_id:device_id,\n            };\n\n            AUTH.newAuthToken( token, true,\n                ( newToken )=>{\n                    next( newToken, true, device_id/*channel_uuid*/, pubnub_auth_key, [], 201 );\n                });\n        });\n};\n\nexports.login = function( params, res, next )\n{\n    LOG.info( params);\n    mongoose.model('Device').findOne(\n        {\n           'device_id' : params.auth_token.device_id,\n        },\n        function ( err, device )\n            {\n                LOG.info( 'in login');\n                LOG.info( device);\n                LOG.info( params);\n                if(err || device===null)\n                {\n                    res.status(404).json({err:err});\n                }\n                else\n                {\n                    MOMENT.isExpired(params.auth_token,\n                    function (status)\n                    {\n                        AUTH.newAuthToken( params.auth_token, status,\n                            function( newToken )\n                            {\n                                next( newToken, status, device.channel_uuid, device.pubnub_key, device.friends,200 );\n                            });\n\n                    });\n                }\n\n            });\n\n};\n\n\nexports.getFriends = function( params, next )\n{\n    LOG.info( CHALK.red('In DEVICE.getFriends') );\n    DEVICE.filterFriends( device, function(friends)\n        {\n            next( err, friends);\n        });\n};\n\nexports.unFriend = function( params, next )\n{\n    next();\n};"]}