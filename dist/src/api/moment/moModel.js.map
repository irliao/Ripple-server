{"version":3,"sources":["src/api/moment/moModel.js"],"names":[],"mappings":"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","file":"src/api/moment/moModel.js","sourcesContent":["var mongoose     = require( 'mongoose' );\nvar Schema       = mongoose.Schema;\nvar AUTH     = require('../service/auth');\nvar PUBNUB = require('../service/pubnub');\nvar async = require( 'async' );\nvar CHALK =  require( 'chalk' );\nvar LOG = require('../service/util').logger;\nvar uuid = require('node-uuid');\n\n\nvar MomentSchema   = new Schema(\n    {\n        actor_id        : String,\n        device_id       : String,\n        image_url       : String,\n        status          : String,\n        pubnub_key      : String,\n        timestamp       : { type: Date, default: Date.now },\n        location        : { type: [Number], index: '2d' },\n        expired         : { type: Boolean, default: false },\n    });\n\n\n//MomentSchema.ensureIndex({actor_id:1},{unique:true});\nvar generate_like = function( item, next )\n    {\n        LOG.error('gun like');\n        LOG.error(item.device_id);\n        AUTH.issueActionToken('like',\n            {\n                target_info:\n                {\n                    aid          : item.actor_id,\n                    distance     : item.distance\n                }\n            },\n            (action_token)=>{\n                //LOG.error(action_token);\n                //token.action_token.like=action_token;\n\n                generate_subscribe({\n                    action_token: {like:action_token},\n                    image_url   : item['image_url'],\n                    distance    : item['distance'],\n                    status      : item['status'],\n                    uuid  : item.actor_id,\n                }, item.device_id,next);\n            });\n    };\n\nvar generate_subscribe = function(item, target_did, next){\n            LOG.error('gen sub');\n            var id = uuid.v4();\n            AUTH.issueActionToken('subscribe',\n            {\n                target_info:\n                {\n                    did          : target_did,\n                    uuid         : id\n                }\n            },\n            (subscribe_token)=>{\n                console.log('gen seb done');\n                next(null,{\n                    action_token: {like: item.action_token.like,subscribe:subscribe_token},\n                    image_url   : item['image_url'],\n                    distance    : item['distance'],\n                    status      : item['status'],\n                    uuid        : id\n                });\n            });\n        };\nvar createExplore = function( nearby_moments, next)\n{\n    if( !nearby_moments )\n    {\n        next(null, null);\n    }\n    else\n    {\n        async.mapSeries( nearby_moments, generate_like,\n        function onExploreGenerate( err, explore_list )\n        {\n            LOG.info(explore_list);\n            if(err) throw err;\n            next( err, explore_list );\n        });\n    }\n};\n\nMomentSchema.statics.getExplore =function( params, next )\n{\n    LOG.error( CHALK.green('In model moment.getExplore') );\n//    LOG.error( params);\n    mongoose.model( 'Moment' ).aggregate(\n        {\n            $geoNear : {\n                near: [parseFloat(params.lat || 0), parseFloat(params.lon ||0)],\n                distanceField: \"distance\",\n                includeLocs: \"location\",\n                maxDistance : 2000\n            }},\n        {   $limit : 10},\n        {   $project :\n            {\n                'actor_id' : 1,\n                'device_id' : 1,\n                'pubnub_key': 1,\n                'image_url' : 1,\n                'status': 1,\n                'distance':1,\n                'location':1,\n                '_id' : 1\n            }},\n        function( err, nearby_moments )\n            {\n                LOG.error( 'nearby_moments');\n                LOG.error( nearby_moments);\n                LOG.error( err);\n                LOG.error( params.lat);\n                if (err) throw err;\n                createExplore(nearby_moments, function (err,explore_list) {\n                    LOG.error('explore_listssss');\n                    LOG.error(explore_list);\n                    next(err, explore_list);\n                    // body...\n                });\n            });\n\n};\n\nMomentSchema.statics.isExpired =function( token, next )\n{\n    this.model( 'Moment' ).find(\n        {\n           'actor_id' : token.actor_id,\n        })\n        .limit(1)\n        .exec(\n            function ( err, mo )\n            {\n                if(err || mo.length === 0)\n                {\n                    next(true);\n                }\n                else//...check if me expired\n                {\n                    //var current = new Date();\n                    //console.log(mo[0].timestamp.getTime()-current>86400000);\n                    next(mo[0].expired);\n                }\n\n            });\n}\n\n\n\nMomentSchema.methods.getNearWithRelation = function( params, next )\n{\n    LOG.info( CHALK.blue('In getNear: ') );\n    mongoose.model( 'Moment' ).find(\n        {\n            'location' :\n            {\n                $nearSphere : params['location'],\n                $maxDistance : 50,\n            },\n        },\n        {\n            status: 1,\n            mid : 1,\n            image_url : 1,\n            liked_relation:\n            {\n                $elemMatch :\n                {\n                    target_mid : params['my_mid'],\n                }\n            },\n            connection:\n            {\n                $elemMatch :\n                {\n                    target_mid : params['my_mid'],\n                }\n            },\n        })\n        .skip( params['offset'] )\n        .limit( params['limit'] )\n        .exec(\n            function( err, nearby_moments )\n            {\n                if (err) throw err;\n\n                next( err, nearby_moments );\n            });\n};\n\n\n\nmodule.exports = mongoose.model( 'Moment', MomentSchema );"]}