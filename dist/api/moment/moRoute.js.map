{"version":3,"sources":["src/api/moment/moRoute.js"],"names":[],"mappings":"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","file":"src/api/moment/moRoute.js","sourcesContent":["var MomentCtr     = require('./moControl');\nvar DEVICE    = require('../device/deModel');\nvar UTIL     = require('../service/util');\nvar LOG = UTIL.logger;\nvar routeValidator = require('../service/util').validator.route;\nvar tokenValidator = require('../service/util').validator.token;\nvar AUTH     = require('../service/auth');\nvar ACTOR=require('../actor');\nvar S3 = require('../service/uploader');\nvar nconf = require('nconf');\nvar express = require('express');\nvar uuid = require('node-uuid');\n\n\nvar moment = express.Router();\n\n\n\n/**\n**  Input Validation & Authentication\n**/\nmoment.post('/', S3.multipart, routeValidator('moment','post'));\nmoment.put('/', routeValidator('moment','put'));\nmoment.post('/action', routeValidator('moment','action'));\n\nmoment.use(AUTH.authenticate);\n\n\n/**\n**  Routes\n**/\nmoment.route('/')\n    /*\n       Initiate a moment, request when photo taken\n    */\n    .post(DEVICE.getDevice, function( req, res )\n    {\n\n        var params =\n        {\n            device_id : req.body.auth_token.device_id,\n            resource_device : req.body.resource_device,\n            image_url   :   req.body.image_url,\n            lat : req.body.lat,\n            lon : req.body.lon,\n            actor_id:req.body.auth_token.actor_id\n        };\n\n        var response = function(status, msg, newToken)\n        {\n            res.status(status).json(\n                {\n                    new_auth_token:newToken\n                });\n        };\n\n        MomentCtr.initMoment(params, response);\n    })\n\n\n    /*\n       Complete a moment and login\n    */\n    .put( ACTOR.getActor, function( req, res )\n    {\n\n        var params =\n        {\n            resource_actor : req.body.resource_actor,\n            auth_token: req.body.auth_token,\n            status : req.body.status,\n            lat:    req.body.auth_token.lat || 0,\n            lon:    req.body.auth_token.lon || 0,\n            limit : 10,\n            offset : 0\n        };\n\n        var response = function(status, msg, explore_list)\n        {\n            res.status(status).json(\n                {\n                    msg:msg,\n                    explore_list: explore_list || [],\n                });\n        };\n        MomentCtr.completeMoment(params,response);\n    });\n\n\n\nmoment.route('/explore')\n    /*\n       get latest moment since last updated\n    */\n    .post( function(req, res)\n    {\n        var params =\n        {\n            auth_token : req.body.auth_token,\n            //resource_actor : req.body.resource_actor,\n            offset: req.body.offset,\n            limit:req.body.limit,\n            lat:req.body.auth_token.lat || 0,\n            lon:req.body.auth_token.lon || 0\n        };\n        MomentCtr.getNewExplore( params,\n            function( status, explore_list )\n            {\n                res.status(status).json(\n                    {\n                        explore_list: explore_list || []\n                    });\n            });\n    });\n\n\nmoment.route('/action')\n    .all(AUTH.parseAction)//,tokenValidator('action'))\n    .post( function( req, res )\n    {\n        var params =\n        {\n            auth_token : req.body.auth_token,\n            action_token : req.body.action_token,\n            body: req.body\n        };\n        LOG.info( 'body');\n        LOG.info( req.body);\n        var response = function(status, payload)\n        {\n\n            res.status(status).json(\n                    {\n                        payload : payload\n                    });\n        };\n        MomentCtr.doAction( params, response);\n    });\n\n\n\nmodule.exports = moment"]}