{"version":3,"sources":["src/api/actor.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAU,OAAO,CAAC,UAAU,CAAC,CAAC;AAC1C,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAM,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC5C,IAAI,MAAM,GAAI,OAAO,CAAC,kBAAkB,CAAC,CAAA;AACzC,IAAI,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC9C,IAAI,GAAG,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAChC,IAAI,MAAM,GAAY,QAAQ,CAAC,MAAM,CAAC;;AAEtC,IAAI,gBAAgB,GAAG,IAAI,MAAM,CACjC;AACI,YAAQ,EAAE,MAAM;AAChB,aAAS,EAAC,MAAM;AAChB,cAAU,EAAG,MAAM;AACnB,QAAI,EAAG,MAAM;CAChB,CAAC,CAAC;;AAEH,IAAI,cAAc,GAAG,IAAI,MAAM,CAC/B;AACI,YAAQ,EAAG,MAAM;AACjB,cAAU,EAAE,MAAM;AAClB,QAAI,EAAM,MAAM;AAChB,UAAM,EAAG,MAAM,EAClB,CAAC,CAAC;;AAEH,IAAI,aAAa,GAAG,IAAI,MAAM,CAC9B;AACI,gBAAY,EAAC;AACT,YAAI,EAAC,MAAM;AACX,iBAAS,EAAC,MAAM;KACnB;AACD,YAAQ,EAAC,MAAM;AACf,aAAS,EAAE,MAAM;AACjB,UAAM,EAAE,MAAM;AACd,YAAQ,EAAE,MAAM,EACnB,CAAC,CAAC;;AAEH,IAAI,WAAW,GAAG,IAAI,MAAM,CACxB;AACI,YAAQ,EAAC,MAAM;AACf,UAAM,EAAC,MAAM;AACb,aAAS,EAAC,MAAM;AAChB,cAAU,EAAC,MAAM;AACjB,aAAS,EAAC,MAAM;AAChB,UAAM,EAAC,MAAM;AACb,YAAQ,EAAC,CAAC,cAAc,CAAC;AACzB,WAAO,EAAE,CAAC,aAAa,CAAC;AACxB,cAAU,EAAQ,CAAC,gBAAgB,CAAC;AACpC,aAAS,EAAS,EAAE,IAAI,EAAE,IAAI,EAAE,WAAS,IAAI,CAAC,GAAG,EAAE;CACtD,CAAC,CAAC;;;;AAIP,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI,EACvD;AACI,OAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAEpC,OAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;;AAExC,YAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAC3B;AACG,kBAAa,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAC3C,EACD,UAAW,GAAG,EAAE,KAAK,EACjB;AACI,WAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,WAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClB,eAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,YAAG,GAAG,IAAI,KAAK,KAAK,IAAI,EACxB;AACI,eAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,GAAG,EAAC,CAAC,CAAC;SACnC,MAAI;AACD,eAAG,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAChC,gBAAI,EAAE,CAAC;SACV;KACJ,CAAC,CAAC;CACd,CAAC;AACF,WAAW,CAAC,OAAO,CAAC,aAAa,GAAG,UAAU,UAAU,EAAE,SAAS,EAAE,IAAI,EACzE;AACI,OAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACvB,OAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAErB,YAAQ,CAAC,KAAK,CAAE,OAAO,CAAE,CAAC,IAAI,CAC1B;AACG,kBAAa,SAAS,EACxB,EACD;AACI,kBAAU,EAAC,CAAC;KACf,CAAC,CACD,IAAI,CACD,EAAC,WAAa,CAAC,CAAC,EAAC,CACpB,CAAC,KAAK,CAAC,CAAC,CAAC,CACT,IAAI,CACD,UAAU,GAAG,EAAE,GAAG,EAClB;;AAEI,YAAI,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAExB,YAAI,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;KACjB,CAAC,CAAC;CACd,CAAC;AACF,WAAW,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,UAAU,EAAE,SAAS,EAAE,IAAI,EACvE;AACI,OAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACvB,OAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAErB,YAAQ,CAAC,KAAK,CAAE,OAAO,CAAE,CAAC,IAAI,CAC1B;AACG,kBAAa,SAAS,EACxB,EACD;AACI,gBAAQ,EACR;AACI,sBAAU,EACV;AACI,wBAAQ,EAAG,UAAU,EACxB;;SAEJ;AACD,kBAAU,EACV;AACI,sBAAU,EACV;AACI,wBAAQ,EAAG,UAAU,EACxB;SACJ;AACD,gBAAQ,EAAC,CAAC;AACV,kBAAU,EAAC,CAAC;AACZ,iBAAS,EAAC,CAAC;AACX,cAAM,EAAC,CAAC;AACR,cAAM,EAAC,CAAC;;KAEX,CAAC,CACD,IAAI,CACD,EAAC,WAAa,CAAC,CAAC,EAAC,CACpB,CAAC,KAAK,CAAC,CAAC,CAAC,CACT,IAAI,CACD,UAAU,GAAG,EAAE,GAAG,EAClB;;AAEI,YAAI,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAExB,YAAI,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;KACjB,CAAC,CAAC;CACd,CAAC;;AAGF,WAAW,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,MAAM,EAAE,IAAI,EACxD;;AAEI,QAAI,CAAC,MAAM,CACP;AACI,iBAAS,EACT;AACI,oBAAQ,EACR;AACI,0BAAgB,MAAM,CAAC,UAAU;AACjC,wBAAc,MAAM,CAAC,MAAM;AAC3B,sBAAkB,MAAM,CAAC,IAAI;aAChC;SACJ;KACJ,EACD,SAAS,QAAQ,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChC;AACI,WAAG,CAAC,IAAI,CAAE,kBAAkB,CAAE,CAAC;AAC/B,WAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;AAChB,WAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;AAChB,WAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;AAChB,YAAG,IAAI,EAAE,IAAI,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;KAClC,CAAC,CAAC;CACV,CAAC;;AAEF,WAAW,CAAC,OAAO,CAAC,cAAc,GAAG,UAAU,MAAM,EAAE,IAAI,EAC3D;AACI,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,CAAC,MAAM,CACP;AACI,iBAAS,EACT;AACI,sBAAU,EACV;AACI,0BAAgB,MAAM,CAAC,UAAU;AACjC,2BAAiB,MAAM,CAAC,gBAAgB;AACxC,4BAAkB,MAAM,CAAC,UAAU;AACnC,sBAAkB,QAAQ;aAC7B;SACJ;;KAEJ,EACD,SAAS,QAAQ,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChC;AACI,WAAG,CAAC,IAAI,CAAE,qBAAqB,CAAE,CAAC;AAClC,eAAO,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;AACpB,WAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;;AAEhB,gBAAQ,CAAC,KAAK,CAAE,QAAQ,CAAE,CAAC,MAAM,CACjC;AACG,uBAAa,MAAM,CAAC,gBAAgB;SACtC,EACD;AACI,qBAAS,EACT;AACI,uBAAO,EACP;AACI,+BAAe,IAAI,CAAC,SAAS;AAC7B,gCAAe,MAAM,CAAC,UAAU;AAChC,+BAAe,EAAE;AACjB,6BAAc,CAAC;AACC,iCAAS,EAAC,IAAI,CAAC,SAAS;AACxB,8BAAM,EAAC,IAAI,CAAC,MAAM;qBACrB,CAAC;iBACjB;aACJ;SACJ,EACD,UAAS,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC;AAClB,gBAAG,IAAI,EAAE,IAAI,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;AAC/B,eAAG,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;AACzE,eAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,eAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,eAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC7B,CAAC,CAAC;KACN,CAAC,CAAC;CACV,CAAC;;AAIF,WAAW,CAAC,OAAO,CAAC,oBAAoB,GAAG,UAAU,MAAM,EAAE,IAAI,EACjE;;AAEK,YAAQ,CAAC,KAAK,CAAE,OAAO,CAAE,CAAC,OAAO,CAC9B;AACG,kBAAa,MAAM,CAAC,UAAU,EAChC,EAAC,UAAW,GAAG,EAAE,KAAK,EACnB;AACI,YAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAA;;AAE/B,YAAI,YAAY,GAAG,KAAK,CAAC;AACzB,aAAK,CAAC,MAAM,CACR;;AAEI,qBAAS,EACT;;AAEI,0BAAU,EACV;AACI,8BAAgB,MAAM,CAAC,SAAS;AAChC,+BAAiB,YAAY,CAAC,SAAS;AACvC,gCAAkB,MAAM,CAAC,UAAU;AACnC,0BAAkB,QAAQ,EAC7B;;aAEJ;AACD,qBAAS,EAAC,CAAC;SACd,EACD,SAAS,QAAQ,CAAE,GAAG,EAAE,GAAG,EAAC,GAAG,EAC/B;AACI,eAAG,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;AACjF,eAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,eAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,mBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACxB,mBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;AAE1B,oBAAQ,CAAC,KAAK,CAAE,QAAQ,CAAE,CAAC,MAAM,CACjC;AACG,2BAAc,MAAM,CAAC,aAAa,EACpC,EACD;AACI,yBAAS,EACT;AACI,2BAAO,EACP;AACI,mCAAiB,YAAY,CAAC,SAAS;AACvC,oCAAkB,MAAM,CAAC,UAAU;AACnC,mCAAuB,EAAE;AACzB,iCAAiB,CAAC;AACd,qCAAS,EAAC,YAAY,CAAC,SAAS;AAChC,kCAAM,EAAC,YAAY,CAAC,MAAM;yBAC7B,CAAC;qBACL;iBACJ;aACJ,EACD,UAAS,GAAG,EAAE,GAAG,EAAC,GAAG,EAAC;AAClB,mBAAG,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;AACrF,mBAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,mBAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,mBAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAEjB,CAAC,CAAC;AACH,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC1B,gBAAI,CAAE,GAAG,EAAE,KAAK,CAAC,SAAS,CAAE,CAAC;SAChC,CAAC,CAAC;KACV,CAAC,CAAC;CACd,CAAC;;AAEF,WAAW,CAAC,OAAO,CAAC,iBAAiB,GAAG,UAAU,MAAM,EAAE,IAAI,EAC9D;;AAEI,YAAQ,CAAC,KAAK,CAAE,OAAO,CAAE,CAAC,OAAO,CAC7B;AACG,kBAAa,MAAM,CAAC,UAAU;KAChC,EAAC,UAAU,GAAG,EAAE,KAAK,EAClB;;AAEI,YAAI,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;AAGvB,aAAK,CAAC,MAAM,CACR;AACI,qBAAS,EACT;AACI,wBAAQ,EACR;AACI,8BAAW,MAAM,CAAC,SAAS;AAC3B,gCAAa,MAAM,CAAC,UAAU;AAC9B,4BAAS,MAAM,CAAC,MAAM;iBACzB;aACJ;SACJ,EACD,SAAS,QAAQ,CAAE,GAAG,EAAE,GAAG,EAAC,GAAG,EAC/B;;AAEI,gBAAG,IAAI,EAAE,IAAI,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;SAClC,CAAC,CAAC;KACV,CAAC,CAAC;CACd,CAAC;;;;;AAMF,IAAI,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,UAAU,CAAC,aAAa,GAAG,UAAS,MAAM,EAAE,IAAI,EAChD;;AAEI,OAAG,CAAC,IAAI,CAAC,oCAAoC,GAAC,MAAM,CAAC,cAAc,CAAC,CAAC;;AAErE,UAAM,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE,YAAY,EACjD;AACI,WAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC5B,WAAG,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACvC,YAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,cAAM,CAAC,OAAO,CAAC,EAAC,SAAS,EAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAC,EAAC,UAAS,GAAG,EAAE,MAAM,EAC3E;AACI,gBAAI,QAAQ,GAAG,IAAI,UAAU,CAAC;AAC1B,wBAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ;AACpC,sBAAM,EAAE,MAAM,CAAC,MAAM;AACrB,0BAAU,EAAE,MAAM,CAAC,UAAU;AAC7B,sBAAM,EAAI,SAAS;AACnB,uBAAO,EAAI,YAAY;aAC1B,CAAC,CAAC;AACH,gBAAI,CAAC,QAAQ,CAAC,CAAC;SAClB,CAAC,CAAC;KAGN,CAAC,CAAC;CACV,CAAC;;AAGF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"src/api/actor.js","sourcesContent":["var mongoose        = require('mongoose');\nvar async = require('async');\nvar MOMENT    = require('./moment/moModel');\nvar DEVICE  = require('./device/deModel')\nvar MomentCtr = require('./moment/moControl');\nvar LOG = require('./service/util').logger;;\nvar uuid = require('node-uuid');\nvar Schema          = mongoose.Schema;\n\nvar connectionSchema = new Schema(\n{\n    actor_id: String,\n    device_id:String,\n    channel_id : String,\n    type : String\n});\n\nvar relationSchema = new Schema(\n{\n    actor_id : String,\n    pubnub_key: String,\n    type    : String,\n    status : Number,\n});\n\nvar exploreSchema = new Schema(\n{\n    action_token:{\n        like:String,\n        subscribe:String\n    },\n    actor_id:String,\n    image_url: String,\n    status: String,\n    distance: String,\n});\n\nvar ActorSchema = new Schema(\n    {\n        actor_id:String,\n        health:String,\n        device_id:String,\n        pubnub_key:String,\n        image_url:String,\n        status:String,\n        relation:[relationSchema],\n        explore: [exploreSchema],\n        connection      : [connectionSchema],\n        timestamp       : { type: Date, default: Date.now }\n    });\n/*\n* Middleware\n*/\nActorSchema.statics.getActor = function( req, res, next)\n{\n    LOG.info('[ Middleware ] getActor');\n\n    LOG.info(req.body.auth_token.device_id);\n\n    mongoose.model('Actor').findOne(\n        {\n           'actor_id' : req.body.auth_token.actor_id,\n        },\n        function ( err, actor )\n            {\n                LOG.info(err);\n                LOG.info('actor');\n                console.log(actor);\n                if(err || actor === null)\n                {\n                    res.status(404).json({err:err});\n                }else{\n                    req.body.resource_actor = actor;\n                    next();\n                }\n            });\n};\nActorSchema.statics.getConnection = function( target_aid, owner_aid, next )\n{\n    LOG.info('target_aid');\n    LOG.info(target_aid);\n\n    mongoose.model( 'Actor' ).find(\n        {\n           'actor_id' : owner_aid,\n        },\n        {\n            connection:1\n        })\n        .sort(\n            {\"timestamp\": -1}\n        ).limit(1)\n        .exec(\n            function( err, obj )\n            {\n\n                if (err) LOG.error(err);\n\n                next(err,obj);\n            });\n};\nActorSchema.statics.getRelation = function( target_aid, owner_aid, next )\n{\n    LOG.info('target_aid');\n    LOG.info(target_aid);\n\n    mongoose.model( 'Actor' ).find(\n        {\n           'actor_id' : owner_aid,\n        },\n        {\n            relation:\n            {\n                $elemMatch :\n                {\n                    actor_id : target_aid,\n                }\n\n            },\n            connection:\n            {\n                $elemMatch :\n                {\n                    actor_id : target_aid,\n                }\n            },\n            actor_id:1,\n            pubnub_key:1,\n            image_url:1,\n            status:1,\n            health:1\n\n        })\n        .sort(\n            {\"timestamp\": -1}\n        ).limit(1)\n        .exec(\n            function( err, obj )\n            {\n\n                if (err) LOG.error(err);\n\n                next(err,obj);\n            });\n};\n\n\nActorSchema.methods.addRelation = function( params, next )\n{\n\n    this.update(\n        {\n            $addToSet :\n            {\n                relation :\n                {\n                    'actor_id'    : params.target_aid,\n                    'status'    : params.status,\n                    'type'          : params.type\n                }\n            }\n        },\n        function onUpdate( err, num, obj )\n        {\n            LOG.info( '-addconncetion: ' );\n            LOG.info( obj );\n            LOG.info( err );\n            LOG.info( num );\n            if(next) next( err, num, obj );\n        });\n};\n\nActorSchema.methods.saveConnection = function( params, next )\n{\n    var self = this;\n    this.update(\n        {\n            $addToSet :\n            {\n                connection :\n                {\n                    'actor_id'    : params.target_aid,\n                    'device_id'     :params.target_device_id,\n                    'channel_id'    : params.channel_id,\n                    'type'          : 'friend'\n                }\n            }\n\n        },\n        function onUpdate( err, num, obj )\n        {\n            LOG.info( '-chcaddconncetion: ' );\n            console.log( self );\n            LOG.info( err );\n\n            mongoose.model( 'Device' ).update(\n            {\n               'device_id' :params.target_device_id\n            },\n            {\n                $addToSet :\n                {\n                    friends :\n                    {\n                        'device_id'  : self.device_id,\n                        'channel_id' : params.channel_id,\n                        'nick_name'  : '',\n                        'moments'    :[{\n                                        image_url:self.image_url,\n                                        status:self.status\n                                    }]\n                    }\n                }\n            },\n            function(err,num, obj){\n                if(next) next( err, num, obj );\n                LOG.error('#######################################################################');\n                            LOG.info(err);\n                            LOG.info(num);\n                            LOG.info(obj);\n            });\n        });\n};\n\n\n\nActorSchema.statics.saveRemoteConnection = function( params, next )\n{\n\n     mongoose.model( 'Actor' ).findOne(\n        {\n           'actor_id' : params.target_aid,\n        },function ( err, actor )\n            {\n                var device_id = actor.device_id\n\n                var target_actor = actor;\n                actor.update(\n                    {\n\n                        $addToSet :\n                        {\n\n                            connection :\n                            {\n                                'actor_id'    : params.owner_aid,\n                                'device_id'     :target_actor.device_id,\n                                'channel_id'    : params.channel_id,\n                                'type'          : 'friend',\n                            }\n\n                        },\n                        device_id:1\n                    },\n                    function onUpdate( err, num,obj )\n                    {\n                        LOG.error('#######################################################################');\n                            LOG.info(err);\n                            LOG.info(num);\n                            console.log(params);\n                        console.log(target_actor);\n\n                        mongoose.model( 'Device' ).update(\n                        {\n                           'device_id' : params.own_device_id ,\n                        },\n                        {\n                            $addToSet :\n                            {\n                                friends :\n                                {\n                                    'device_id'    : target_actor.device_id,\n                                    'channel_id'    : params.channel_id,\n                                    'nick_name'          : '',\n                                    'moments'       :[{\n                                        image_url:target_actor.image_url,\n                                        status:target_actor.status\n                                    }]\n                                }\n                            }\n                        },\n                        function(err, num,obj){\n                            LOG.error('#######################################################################');\n                            LOG.info(err);\n                            LOG.info(num);\n                            LOG.info(obj);\n\n                        });\n                        LOG.info(actor.device_id);\n                        next( err, actor.device_id );\n                    });\n            });\n};\n\nActorSchema.statics.addRemoteRelation = function( params, next )\n{\n\n    mongoose.model( 'Actor' ).findOne(\n        {\n           'actor_id' : params.target_aid\n        },function( err, actor )\n            {\n\n                if (err) LOG.info(err);\n                //LOG.info('actor');\n                //LOG.info(actor);\n                actor.update(\n                    {\n                        $addToSet :\n                        {\n                            relation:\n                            {\n                                'actor_id':params.owner_aid,\n                                'pubnub_key':params.pubnub_key,\n                                'status':params.status\n                            }\n                        }\n                    },\n                    function onUpdate( err, num,obj )\n                    {\n                        //LOG.info(err);\n                        if(next) next( err, num, obj );\n                    });\n            });\n};\n\n\n/*\n* Helper\n*/\nvar actorModel = mongoose.model('Actor', ActorSchema);\nactorModel.createPending = function(params, next)\n{\n\n    LOG.warn('Actor.createPending, actor.health:'+params.resource_actor);\n\n    MOMENT.getExplore(params, function (err, explore_list)\n        {\n            LOG.error('create pending');\n            LOG.error(params.auth_token.device_id);\n            if (err) throw err;\n            DEVICE.findOne({device_id:params.auth_token.device_id},function(err, device)\n            {\n                var newActor = new actorModel({\n                    actor_id: params.auth_token.actor_id,\n                    status: params.status,\n                    pubnub_key: device.pubnub_key,\n                    health:   'pending',\n                    explore:   explore_list\n                });\n                next(newActor);\n            });\n\n\n        });\n};\n\n\nmodule.exports = actorModel;\n\n"]}